on:
  release:
    types:
      - created

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

name: Create Release / Upload Assets

jobs:
  version_bump:
    name: Bump cache version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Version
        run: .github/.deploy/bump.sh

      - uses: actions/upload-artifact@v2
        with:
          name: aur-version
          path: PKGBUILD

      - uses: actions/upload-artifact@v2
        with:
          name: pkg-version
          path: Cargo.toml

  windows:
    name: Build for Windows
    runs-on: windows-latest
    needs: [version_bump]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: aur-version

      - uses: actions/download-artifact@v2
        with:
          name: pkg-version

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release

      - name: "Move to outputs/ folder"
        run: |
          mkdir outputs
          cp target/release/*.exe outputs/auto-commit-win-x86_64.exe

      - name: Upload to temporary storage
        uses: actions/upload-artifact@master
        with:
          name: output-artifact
          path: outputs

  linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    needs: [version_bump]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: aur-version

      - uses: actions/download-artifact@v2
        with:
          name: pkg-version

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release

      # carry on with the build if this step fails
      - name: Install cargo-deb
        run: cargo install cargo-deb
        continue-on-error: true

      - name: Create deb package
        run: cargo deb

      # Name of binary needed
      - name: "Move to outputs/ folder"
        run: |
          mkdir outputs
          cp target/release/auto-commit outputs/auto-commit-linux-x86_64
          cp target/debian/*.deb outputs/auto-commit-linux-x86_64.deb

      - name: Upload to temporary storage
        uses: actions/upload-artifact@master
        with:
          name: output-artifact
          path: outputs

  macos:
    name: Build for Mac
    runs-on: macos-11
    needs: [version_bump]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: aur-version

      - uses: actions/download-artifact@v2
        with:
          name: pkg-version

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install ARM target
        run: rustup update && rustup target add aarch64-apple-darwin

      - name: Build
        run: cargo build --release --target=aarch64-apple-darwin

      - name: Build
        run: cargo build --release

      # Name of binary needed
      - name: "Move to outputs/ folder"
        run: |
          mkdir outputs
          cp target/aarch64-apple-darwin/release/auto-commit outputs/auto-commit-darwin-aarch64
          cp target/release/auto-commit outputs/auto-commit-darwin-x86_64

      - name: Upload to temporary storage
        uses: actions/upload-artifact@master
        with:
          name: output-artifact
          path: outputs

  release:
    name: Create/or release assets
    runs-on: ubuntu-latest
    needs: [windows, linux, macos]

    steps:
      - name: Download from temporary storage
        uses: actions/download-artifact@master
        with:
          name: output-artifact
          path: outputs

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: outputs/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  aur_release:
    name: Bump AUR
    runs-on: ubuntu-latest
    needs: [version_bump]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: aur-version

      - uses: actions/download-artifact@v2
        with:
          name: pkg-version

      - name: Publish AUR package
        uses: KSXGitHub/github-actions-deploy-aur@v2.5.0
        with:
          pkgname: auto-commit
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Update AUR package
          ssh_keyscan_types: rsa,dsa,ecdsa,ed25519
